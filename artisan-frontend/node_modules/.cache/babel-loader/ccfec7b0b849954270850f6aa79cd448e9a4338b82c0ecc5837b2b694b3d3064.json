{"ast":null,"code":"var _jsxFileName = \"/home/lightberry/bucket/artisan-test/frontend/src/components/chatbot/MessageBox.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport SingleMessage from \"./SingleMessage\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MessageBox() {\n  _s();\n  const messages = useSelector(state => state.chat.messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col flex-grow gap-3 bg-gray-400w-full\",\n    children: messages.map(message => /*#__PURE__*/_jsxDEV(SingleMessage, {\n      isBot: message.isBot,\n      message: message.content,\n      avatar: message.isBot ? \"/bot.png\" : \"/boy.png\"\n    }, message.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, this);\n}\n_s(MessageBox, \"OAwgDiMqrVXCkFhvg+DR1n/4eso=\", false, function () {\n  return [useSelector];\n});\n_c = MessageBox;\nvar _c;\n$RefreshReg$(_c, \"MessageBox\");","map":{"version":3,"names":["React","SingleMessage","useSelector","jsxDEV","_jsxDEV","MessageBox","_s","messages","state","chat","className","children","map","message","isBot","content","avatar","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/lightberry/bucket/artisan-test/frontend/src/components/chatbot/MessageBox.tsx"],"sourcesContent":["import React from \"react\";\nimport SingleMessage from \"./SingleMessage\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../redux/store\";\n\nexport default function MessageBox() {\n\tconst messages = useSelector((state: RootState) => state.chat.messages);\n\n\treturn (\n\t\t<div className=\"flex flex-col flex-grow gap-3 bg-gray-400w-full\">\n\t\t\t{messages.map((message) => (\n\t\t\t\t<SingleMessage\n\t\t\t\t\tkey={message.id}\n\t\t\t\t\tisBot={message.isBot}\n\t\t\t\t\tmessage={message.content}\n\t\t\t\t\tavatar={message.isBot ? \"/bot.png\" : \"/boy.png\"}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1C,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAMC,QAAQ,GAAGL,WAAW,CAAEM,KAAgB,IAAKA,KAAK,CAACC,IAAI,CAACF,QAAQ,CAAC;EAEvE,oBACCH,OAAA;IAAKM,SAAS,EAAC,iDAAiD;IAAAC,QAAA,EAC9DJ,QAAQ,CAACK,GAAG,CAAEC,OAAO,iBACrBT,OAAA,CAACH,aAAa;MAEba,KAAK,EAAED,OAAO,CAACC,KAAM;MACrBD,OAAO,EAAEA,OAAO,CAACE,OAAQ;MACzBC,MAAM,EAAEH,OAAO,CAACC,KAAK,GAAG,UAAU,GAAG;IAAW,GAH3CD,OAAO,CAACI,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIf,CACD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAER;AAACf,EAAA,CAfuBD,UAAU;EAAA,QAChBH,WAAW;AAAA;AAAAoB,EAAA,GADLjB,UAAU;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}