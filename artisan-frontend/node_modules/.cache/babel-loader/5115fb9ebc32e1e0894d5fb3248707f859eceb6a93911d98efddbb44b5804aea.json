{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  messages: [],\n  userInput: \"\",\n  loading: false\n};\nexport const sendMessage = createAsyncThunk(\"message/send\", async ({\n  message\n}, {\n  getState,\n  rejectWithValue\n}) => {\n  const {\n    user\n  } = getState();\n  const backendURL = process.env.BACKEND_BASE_URL || \"\";\n  const payload = {\n    message: \"Hello\",\n    user_id: 1\n  };\n  const response = await axios.post(`${backendURL}/chat/message/new`, {});\n  return response;\n});\nconst chatSlice = createSlice({\n  name: \"chat\",\n  initialState,\n  reducers: {\n    addMessage: (state, {\n      payload\n    }) => {\n      state.messages.push(payload);\n    },\n    updateUserInput: (state, action) => {\n      state.userInput = action.payload;\n    },\n    deleteMessage: (state, {\n      payload\n    }) => {\n      state.messages = state.messages.filter((msg, index) => index !== payload);\n    }\n  },\n  extraReducers(builder) {\n    builder.addCase(sendMessage.fulfilled, (state, {\n      payload\n    }) => {});\n  }\n});\nexport const {\n  addMessage,\n  updateUserInput,\n  deleteMessage\n} = chatSlice.actions;\nexport default chatSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","messages","userInput","loading","sendMessage","message","getState","rejectWithValue","user","backendURL","process","env","BACKEND_BASE_URL","payload","user_id","response","post","chatSlice","name","reducers","addMessage","state","push","updateUserInput","action","deleteMessage","filter","msg","index","extraReducers","builder","addCase","fulfilled","actions","reducer"],"sources":["/home/lightberry/bucket/artisan-test/frontend/src/redux/chatReducer.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { RootState } from \"./store\";\n\nexport interface Message {\n\tcontent: string;\n\tuser_id: string;\n\ttimestamp?: number;\n\tid?: number;\n\tisBot: boolean;\n}\n\ninterface InitialStateType {\n\tmessages: Message[];\n\tuserInput: string;\n\tloading: boolean;\n}\n\nconst initialState: InitialStateType = {\n\tmessages: [],\n\tuserInput: \"\",\n\tloading: false,\n};\n\ninterface SendMessagePayload {\n\tmessage: string;\n\tuser_id: number;\n}\n\ninterface ThunkParams {\n\tmessage: string;\n}\n\nexport const sendMessage = createAsyncThunk(\n\t\"message/send\",\n\tasync ({ message }: ThunkParams, { getState, rejectWithValue }) => {\n\t\tconst { user } = getState() as RootState;\n\t\tconst backendURL: string = process.env.BACKEND_BASE_URL || \"\";\n\t\tconst payload: SendMessagePayload = {\n\t\t\tmessage: \"Hello\",\n\t\t\tuser_id: 1,\n\t\t};\n\t\tconst response = await axios.post(`${backendURL}/chat/message/new`, {});\n\t\treturn response;\n\t}\n);\n\nconst chatSlice = createSlice({\n\tname: \"chat\",\n\tinitialState,\n\treducers: {\n\t\taddMessage: (state, { payload }) => {\n\t\t\tstate.messages.push(payload);\n\t\t},\n\t\tupdateUserInput: (state, action) => {\n\t\t\tstate.userInput = action.payload;\n\t\t},\n\t\tdeleteMessage: (state, { payload }) => {\n\t\t\tstate.messages = state.messages.filter((msg, index) => index !== payload);\n\t\t},\n\t},\n\textraReducers(builder) {\n\t\tbuilder.addCase(sendMessage.fulfilled, (state, { payload }) => {});\n\t},\n});\n\nexport const { addMessage, updateUserInput, deleteMessage } = chatSlice.actions;\nexport default chatSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAiBzB,MAAMC,YAA8B,GAAG;EACtCC,QAAQ,EAAE,EAAE;EACZC,SAAS,EAAE,EAAE;EACbC,OAAO,EAAE;AACV,CAAC;AAWD,OAAO,MAAMC,WAAW,GAAGP,gBAAgB,CAC1C,cAAc,EACd,OAAO;EAAEQ;AAAqB,CAAC,EAAE;EAAEC,QAAQ;EAAEC;AAAgB,CAAC,KAAK;EAClE,MAAM;IAAEC;EAAK,CAAC,GAAGF,QAAQ,CAAC,CAAc;EACxC,MAAMG,UAAkB,GAAGC,OAAO,CAACC,GAAG,CAACC,gBAAgB,IAAI,EAAE;EAC7D,MAAMC,OAA2B,GAAG;IACnCR,OAAO,EAAE,OAAO;IAChBS,OAAO,EAAE;EACV,CAAC;EACD,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,GAAGP,UAAU,mBAAmB,EAAE,CAAC,CAAC,CAAC;EACvE,OAAOM,QAAQ;AAChB,CACD,CAAC;AAED,MAAME,SAAS,GAAGnB,WAAW,CAAC;EAC7BoB,IAAI,EAAE,MAAM;EACZlB,YAAY;EACZmB,QAAQ,EAAE;IACTC,UAAU,EAAEA,CAACC,KAAK,EAAE;MAAER;IAAQ,CAAC,KAAK;MACnCQ,KAAK,CAACpB,QAAQ,CAACqB,IAAI,CAACT,OAAO,CAAC;IAC7B,CAAC;IACDU,eAAe,EAAEA,CAACF,KAAK,EAAEG,MAAM,KAAK;MACnCH,KAAK,CAACnB,SAAS,GAAGsB,MAAM,CAACX,OAAO;IACjC,CAAC;IACDY,aAAa,EAAEA,CAACJ,KAAK,EAAE;MAAER;IAAQ,CAAC,KAAK;MACtCQ,KAAK,CAACpB,QAAQ,GAAGoB,KAAK,CAACpB,QAAQ,CAACyB,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKA,KAAK,KAAKf,OAAO,CAAC;IAC1E;EACD,CAAC;EACDgB,aAAaA,CAACC,OAAO,EAAE;IACtBA,OAAO,CAACC,OAAO,CAAC3B,WAAW,CAAC4B,SAAS,EAAE,CAACX,KAAK,EAAE;MAAER;IAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACnE;AACD,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEO,UAAU;EAAEG,eAAe;EAAEE;AAAc,CAAC,GAAGR,SAAS,CAACgB,OAAO;AAC/E,eAAehB,SAAS,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}