{"ast":null,"code":"var _jsxFileName = \"/home/lightberry/bucket/artisan-test/frontend/src/components/chatbot/MessageBox.tsx\";\nimport React from \"react\";\nimport SingleMessage from \"./SingleMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dummyMessages = [{\n  id: 1,\n  sender: \"bot\",\n  text: \"Hello! How can I assist you today?\"\n}, {\n  id: 2,\n  sender: \"user\",\n  text: \"I need help with my order.\"\n}, {\n  id: 3,\n  sender: \"bot\",\n  text: \"Sure, can you please provide your order number?\"\n}, {\n  id: 4,\n  sender: \"user\",\n  text: \"It's 12345.\"\n}, {\n  id: 5,\n  sender: \"bot\",\n  text: \"Thank you! Let me check the status of your order.\"\n}, {\n  id: 1,\n  sender: \"bot\",\n  text: \"Hello! How can I assist you today?\"\n}, {\n  id: 2,\n  sender: \"user\",\n  text: \"I need help with my order.\"\n}, {\n  id: 3,\n  sender: \"bot\",\n  text: \"Sure, can you please provide your order number?\"\n}, {\n  id: 4,\n  sender: \"user\",\n  text: \"It's 12345.\"\n}, {\n  id: 5,\n  sender: \"bot\",\n  text: \"Thank you! Let me check the status of your order.\"\n}, {\n  id: 1,\n  sender: \"bot\",\n  text: \"Hello! How can I assist you today?\"\n}, {\n  id: 2,\n  sender: \"user\",\n  text: \"I need help with my order.\"\n}, {\n  id: 3,\n  sender: \"bot\",\n  text: \"Sure, can you please provide your order number?\"\n}, {\n  id: 4,\n  sender: \"user\",\n  text: \"It's 12345.\"\n}, {\n  id: 5,\n  sender: \"bot\",\n  text: \"Thank you! Let me check the status of your order.\"\n}, {\n  id: 1,\n  sender: \"bot\",\n  text: \"Hello! How can I assist you today?\"\n}, {\n  id: 2,\n  sender: \"user\",\n  text: \"I need help with my order.\"\n}, {\n  id: 3,\n  sender: \"bot\",\n  text: \"Sure, can you please provide your order number?\"\n}, {\n  id: 4,\n  sender: \"user\",\n  text: \"It's 12345.\"\n}, {\n  id: 5,\n  sender: \"bot\",\n  text: \"Thank you! Let me check the status of your order.\"\n}];\nexport default function MessageBox({}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col w-full gap-3\",\n    children: dummyMessages.map(message => /*#__PURE__*/_jsxDEV(SingleMessage, {\n      sender: message.sender,\n      message: message.text,\n      avatar: message.sender === \"bot\" ? \"/bot.png\" : \"/boy.png\"\n    }, message.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n}\n_c = MessageBox;\nvar _c;\n$RefreshReg$(_c, \"MessageBox\");","map":{"version":3,"names":["React","SingleMessage","jsxDEV","_jsxDEV","dummyMessages","id","sender","text","MessageBox","className","children","map","message","avatar","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/lightberry/bucket/artisan-test/frontend/src/components/chatbot/MessageBox.tsx"],"sourcesContent":["import React from \"react\";\nimport SingleMessage from \"./SingleMessage\";\n\ntype Props = {\n\t// messages :\n};\n\nconst dummyMessages = [\n\t{ id: 1, sender: \"bot\", text: \"Hello! How can I assist you today?\" },\n\t{ id: 2, sender: \"user\", text: \"I need help with my order.\" },\n\t{ id: 3, sender: \"bot\", text: \"Sure, can you please provide your order number?\" },\n\t{ id: 4, sender: \"user\", text: \"It's 12345.\" },\n\t{ id: 5, sender: \"bot\", text: \"Thank you! Let me check the status of your order.\" },\n\t{ id: 1, sender: \"bot\", text: \"Hello! How can I assist you today?\" },\n\t{ id: 2, sender: \"user\", text: \"I need help with my order.\" },\n\t{ id: 3, sender: \"bot\", text: \"Sure, can you please provide your order number?\" },\n\t{ id: 4, sender: \"user\", text: \"It's 12345.\" },\n\t{ id: 5, sender: \"bot\", text: \"Thank you! Let me check the status of your order.\" },\n\t{ id: 1, sender: \"bot\", text: \"Hello! How can I assist you today?\" },\n\t{ id: 2, sender: \"user\", text: \"I need help with my order.\" },\n\t{ id: 3, sender: \"bot\", text: \"Sure, can you please provide your order number?\" },\n\t{ id: 4, sender: \"user\", text: \"It's 12345.\" },\n\t{ id: 5, sender: \"bot\", text: \"Thank you! Let me check the status of your order.\" },\n\t{ id: 1, sender: \"bot\", text: \"Hello! How can I assist you today?\" },\n\t{ id: 2, sender: \"user\", text: \"I need help with my order.\" },\n\t{ id: 3, sender: \"bot\", text: \"Sure, can you please provide your order number?\" },\n\t{ id: 4, sender: \"user\", text: \"It's 12345.\" },\n\t{ id: 5, sender: \"bot\", text: \"Thank you! Let me check the status of your order.\" },\n];\n\nexport default function MessageBox({}: Props) {\n\treturn (\n\t\t<div className=\"flex flex-col w-full gap-3\">\n\t\t\t{dummyMessages.map((message) => (\n\t\t\t\t<SingleMessage\n\t\t\t\t\tkey={message.id}\n\t\t\t\t\tsender={message.sender}\n\t\t\t\t\tmessage={message.text}\n\t\t\t\t\tavatar={message.sender === \"bot\" ? \"/bot.png\" : \"/boy.png\"}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}