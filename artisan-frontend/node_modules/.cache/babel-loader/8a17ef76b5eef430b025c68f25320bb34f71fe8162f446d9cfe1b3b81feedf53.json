{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  userName: \"\"\n};\nconst chatSlice = createSlice({\n  name: \"chat\",\n  initialState,\n  reducers: {\n    updateUserName: (state, action) => {\n      state.userName = action.payload;\n    }\n  }\n});\nexport const {\n  updateUserName\n} = chatSlice.actions;\nexport default chatSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","userName","chatSlice","name","reducers","updateUserName","state","action","payload","actions","reducer"],"sources":["/home/lightberry/bucket/artisan-test/frontend/src/redux/userReducer.ts"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\ninterface InitialStateType {\n\tuserName: string;\n}\n\nconst initialState: InitialStateType = {\n\tuserName: \"\",\n};\n\nconst chatSlice = createSlice({\n\tname: \"chat\",\n\tinitialState,\n\treducers: {\n\t\tupdateUserName: (state, action) => {\n\t\t\tstate.userName = action.payload;\n\t\t},\n\t},\n});\n\nexport const { updateUserName } = chatSlice.actions;\nexport default chatSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAM9C,MAAMC,YAA8B,GAAG;EACtCC,QAAQ,EAAE;AACX,CAAC;AAED,MAAMC,SAAS,GAAGH,WAAW,CAAC;EAC7BI,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACTC,cAAc,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAClCD,KAAK,CAACL,QAAQ,GAAGM,MAAM,CAACC,OAAO;IAChC;EACD;AACD,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH;AAAe,CAAC,GAAGH,SAAS,CAACO,OAAO;AACnD,eAAeP,SAAS,CAACQ,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}