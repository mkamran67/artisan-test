{"ast":null,"code":"var _jsxFileName = \"/home/lightberry/bucket/assessments/artisan-frontend/src/components/chatbot/MessageBox.tsx\",\n  _s = $RefreshSig$();\nimport SingleMessage from \"./SingleMessage\";\nimport { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MessageBox({\n  messages\n}) {\n  _s();\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col w-full gap-6\",\n    children: messages.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(SingleMessage, {\n        isBot: message.isBot,\n        message: message.content,\n        avatar: message.isBot ? \"/bot.png\" : \"/boy.png\"\n      }, message.id + `${message.isBot ? \"bot\" : \"user\"} + ${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef,\n        className: \"pt-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center justify-center flex-grow\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"block text-center text-gray-400\",\n        children: \"No messages yet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }, this);\n}\n_s(MessageBox, \"0epSoi03NVSoD0I0FiLK4iVNXOA=\");\n_c = MessageBox;\nvar _c;\n$RefreshReg$(_c, \"MessageBox\");","map":{"version":3,"names":["SingleMessage","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","MessageBox","messages","_s","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","className","children","length","map","message","index","isBot","content","avatar","id","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/home/lightberry/bucket/assessments/artisan-frontend/src/components/chatbot/MessageBox.tsx"],"sourcesContent":["import SingleMessage from \"./SingleMessage\";\nimport { Message } from \"../../redux/chatReducer\";\nimport { useEffect, useRef } from \"react\";\n\ntype Props = {\n\tmessages: Message[];\n};\n\nexport default function MessageBox({ messages }: Props) {\n\tconst messagesEndRef = useRef<HTMLDivElement>(null);\n\n\tconst scrollToBottom = () => {\n\t\tmessagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n\t};\n\n\tuseEffect(() => {\n\t\tscrollToBottom();\n\t}, [messages]);\n\n\treturn (\n\t\t<div className=\"flex flex-col w-full gap-6\">\n\t\t\t{messages.length > 0 ? (\n\t\t\t\t<>\n\t\t\t\t\t{messages.map((message, index) => (\n\t\t\t\t\t\t<SingleMessage\n\t\t\t\t\t\t\tkey={message.id + `${message.isBot ? \"bot\" : \"user\"} + ${index}`}\n\t\t\t\t\t\t\tisBot={message.isBot}\n\t\t\t\t\t\t\tmessage={message.content}\n\t\t\t\t\t\t\tavatar={message.isBot ? \"/bot.png\" : \"/boy.png\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t))}\n\t\t\t\t\t<div\n\t\t\t\t\t\tref={messagesEndRef}\n\t\t\t\t\t\tclassName=\"pt-2\"\n\t\t\t\t\t/>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<div className=\"flex flex-col items-center justify-center flex-grow\">\n\t\t\t\t\t<h1 className=\"block text-center text-gray-400\">No messages yet</h1>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n"],"mappings":";;AAAA,OAAOA,aAAa,MAAM,iBAAiB;AAE3C,SAASC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAM1C,eAAe,SAASC,UAAUA,CAAC;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EACvD,MAAMC,cAAc,GAAGR,MAAM,CAAiB,IAAI,CAAC;EAEnD,MAAMS,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IAC5B,CAAAA,qBAAA,GAAAF,cAAc,CAACG,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAC/D,CAAC;EAEDd,SAAS,CAAC,MAAM;IACfU,cAAc,CAAC,CAAC;EACjB,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;EAEd,oBACCJ,OAAA;IAAKY,SAAS,EAAC,4BAA4B;IAAAC,QAAA,EACzCT,QAAQ,CAACU,MAAM,GAAG,CAAC,gBACnBd,OAAA,CAAAE,SAAA;MAAAW,QAAA,GACET,QAAQ,CAACW,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC5BjB,OAAA,CAACJ,aAAa;QAEbsB,KAAK,EAAEF,OAAO,CAACE,KAAM;QACrBF,OAAO,EAAEA,OAAO,CAACG,OAAQ;QACzBC,MAAM,EAAEJ,OAAO,CAACE,KAAK,GAAG,UAAU,GAAG;MAAW,GAH3CF,OAAO,CAACK,EAAE,GAAG,GAAGL,OAAO,CAACE,KAAK,GAAG,KAAK,GAAG,MAAM,MAAMD,KAAK,EAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIhE,CACD,CAAC,eACFzB,OAAA;QACC0B,GAAG,EAAEpB,cAAe;QACpBM,SAAS,EAAC;MAAM;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB,CAAC;IAAA,eACD,CAAC,gBAEHzB,OAAA;MAAKY,SAAS,EAAC,qDAAqD;MAAAC,QAAA,eACnEb,OAAA;QAAIY,SAAS,EAAC,iCAAiC;QAAAC,QAAA,EAAC;MAAe;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAER;AAACpB,EAAA,CAnCuBF,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}