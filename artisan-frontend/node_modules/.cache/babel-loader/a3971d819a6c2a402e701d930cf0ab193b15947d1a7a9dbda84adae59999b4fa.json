{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  userName: \"\",\n  id: -1\n};\nexport const sendMessage = createAsyncThunk(\"user/create\", async ({\n  name\n}) => {\n  const {\n    user\n  } = getState();\n  const backendURL = process.env.BACKEND_BASE_URL || \"\";\n  const payload = {\n    message: \"Hello\",\n    user_id: user.id\n  };\n  const response = await axios.post(`${backendURL}/chat/message/new`, {});\n  return response;\n});\nconst chatSlice = createSlice({\n  name: \"chat\",\n  initialState,\n  reducers: {\n    updateUserName: (state, action) => {\n      state.userName = action.payload;\n    }\n  }\n});\nexport const {\n  updateUserName\n} = chatSlice.actions;\nexport default chatSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","initialState","userName","id","sendMessage","name","user","getState","backendURL","process","env","BACKEND_BASE_URL","payload","message","user_id","response","axios","post","chatSlice","reducers","updateUserName","state","action","actions","reducer"],"sources":["/home/lightberry/bucket/artisan-test/frontend/src/redux/userReducer.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\n\ninterface InitialStateType {\n\tuserName: string;\n\tid: number;\n}\n\nconst initialState: InitialStateType = {\n\tuserName: \"\",\n\tid: -1,\n};\n\nexport const sendMessage = createAsyncThunk(\"user/create\", async ({ name }) => {\n\tconst { user } = getState() as RootState;\n\tconst backendURL: string = process.env.BACKEND_BASE_URL || \"\";\n\tconst payload: SendMessagePayload = {\n\t\tmessage: \"Hello\",\n\t\tuser_id: user.id,\n\t};\n\tconst response = await axios.post(`${backendURL}/chat/message/new`, {});\n\treturn response;\n});\n\nconst chatSlice = createSlice({\n\tname: \"chat\",\n\tinitialState,\n\treducers: {\n\t\tupdateUserName: (state, action) => {\n\t\t\tstate.userName = action.payload;\n\t\t},\n\t},\n});\n\nexport const { updateUserName } = chatSlice.actions;\nexport default chatSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAOhE,MAAMC,YAA8B,GAAG;EACtCC,QAAQ,EAAE,EAAE;EACZC,EAAE,EAAE,CAAC;AACN,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGL,gBAAgB,CAAC,aAAa,EAAE,OAAO;EAAEM;AAAK,CAAC,KAAK;EAC9E,MAAM;IAAEC;EAAK,CAAC,GAAGC,QAAQ,CAAC,CAAc;EACxC,MAAMC,UAAkB,GAAGC,OAAO,CAACC,GAAG,CAACC,gBAAgB,IAAI,EAAE;EAC7D,MAAMC,OAA2B,GAAG;IACnCC,OAAO,EAAE,OAAO;IAChBC,OAAO,EAAER,IAAI,CAACH;EACf,CAAC;EACD,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAI,CAAC,GAAGT,UAAU,mBAAmB,EAAE,CAAC,CAAC,CAAC;EACvE,OAAOO,QAAQ;AAChB,CAAC,CAAC;AAEF,MAAMG,SAAS,GAAGlB,WAAW,CAAC;EAC7BK,IAAI,EAAE,MAAM;EACZJ,YAAY;EACZkB,QAAQ,EAAE;IACTC,cAAc,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAClCD,KAAK,CAACnB,QAAQ,GAAGoB,MAAM,CAACV,OAAO;IAChC;EACD;AACD,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEQ;AAAe,CAAC,GAAGF,SAAS,CAACK,OAAO;AACnD,eAAeL,SAAS,CAACM,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}