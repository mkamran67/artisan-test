{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  messages: [],\n  userInput: \"\",\n  loading: false\n};\nexport const sendMessage = createAsyncThunk(\"message/send\", async () => {\n  const backendURL = process.env.BACKEND_BASE_URL || \"\";\n  const response = await axios.post(`${backendURL}/chat/message`, {\n    message\n  });\n  return response;\n});\nconst chatSlice = createSlice({\n  name: \"chat\",\n  initialState,\n  reducers: {\n    addMessage: (state, {\n      payload\n    }) => {\n      state.messages.push(payload);\n    },\n    updateUserInput: (state, action) => {\n      state.userInput = action.payload;\n    },\n    deleteMessage: (state, {\n      payload\n    }) => {\n      state.messages = state.messages.filter((msg, index) => index !== payload);\n    }\n  },\n  extraReducers(builder) {\n    builder.addCase(clearError.fulfilled, (state, {\n      payload\n    }) => {\n      state.message = payload.message;\n      state.level = payload.level;\n    });\n  }\n});\nexport const {\n  addMessage,\n  updateUserInput,\n  deleteMessage\n} = chatSlice.actions;\nexport default chatSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","messages","userInput","loading","sendMessage","backendURL","process","env","BACKEND_BASE_URL","response","post","message","chatSlice","name","reducers","addMessage","state","payload","push","updateUserInput","action","deleteMessage","filter","msg","index","extraReducers","builder","addCase","clearError","fulfilled","level","actions","reducer"],"sources":["/home/lightberry/bucket/artisan-test/frontend/src/redux/chatReducer.ts"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nexport interface Message {\n\tcontent: string;\n\tuser_id: string;\n\ttimestamp?: number;\n\tid?: number;\n\tisBot: boolean;\n}\n\ninterface InitialStateType {\n\tmessages: Message[];\n\tuserInput: string;\n\tloading: boolean;\n}\n\nconst initialState: InitialStateType = {\n\tmessages: [],\n\tuserInput: \"\",\n\tloading: false,\n};\n\ninterface SendMessagePayload {\n\tmessage: string;\n\tuser_id: number;\n\tis_bot: boolean;\n}\n\nexport const sendMessage = createAsyncThunk(\"message/send\", async () => {\n\tconst backendURL: string = process.env.BACKEND_BASE_URL || \"\";\n\tconst response = await axios.post(`${backendURL}/chat/message`, { message });\n\treturn response;\n});\n\nconst chatSlice = createSlice({\n\tname: \"chat\",\n\tinitialState,\n\treducers: {\n\t\taddMessage: (state, { payload }) => {\n\t\t\tstate.messages.push(payload);\n\t\t},\n\t\tupdateUserInput: (state, action) => {\n\t\t\tstate.userInput = action.payload;\n\t\t},\n\t\tdeleteMessage: (state, { payload }) => {\n\t\t\tstate.messages = state.messages.filter((msg, index) => index !== payload);\n\t\t},\n\t},\n\textraReducers(builder) {\n\t\tbuilder.addCase(clearError.fulfilled, (state, { payload }) => {\n\t\t\tstate.message = payload.message;\n\t\t\tstate.level = payload.level;\n\t\t});\n\t},\n});\n\nexport const { addMessage, updateUserInput, deleteMessage } = chatSlice.actions;\nexport default chatSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAgBzB,MAAMC,YAA8B,GAAG;EACtCC,QAAQ,EAAE,EAAE;EACZC,SAAS,EAAE,EAAE;EACbC,OAAO,EAAE;AACV,CAAC;AAQD,OAAO,MAAMC,WAAW,GAAGP,gBAAgB,CAAC,cAAc,EAAE,YAAY;EACvE,MAAMQ,UAAkB,GAAGC,OAAO,CAACC,GAAG,CAACC,gBAAgB,IAAI,EAAE;EAC7D,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,GAAGL,UAAU,eAAe,EAAE;IAAEM;EAAQ,CAAC,CAAC;EAC5E,OAAOF,QAAQ;AAChB,CAAC,CAAC;AAEF,MAAMG,SAAS,GAAGd,WAAW,CAAC;EAC7Be,IAAI,EAAE,MAAM;EACZb,YAAY;EACZc,QAAQ,EAAE;IACTC,UAAU,EAAEA,CAACC,KAAK,EAAE;MAAEC;IAAQ,CAAC,KAAK;MACnCD,KAAK,CAACf,QAAQ,CAACiB,IAAI,CAACD,OAAO,CAAC;IAC7B,CAAC;IACDE,eAAe,EAAEA,CAACH,KAAK,EAAEI,MAAM,KAAK;MACnCJ,KAAK,CAACd,SAAS,GAAGkB,MAAM,CAACH,OAAO;IACjC,CAAC;IACDI,aAAa,EAAEA,CAACL,KAAK,EAAE;MAAEC;IAAQ,CAAC,KAAK;MACtCD,KAAK,CAACf,QAAQ,GAAGe,KAAK,CAACf,QAAQ,CAACqB,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKA,KAAK,KAAKP,OAAO,CAAC;IAC1E;EACD,CAAC;EACDQ,aAAaA,CAACC,OAAO,EAAE;IACtBA,OAAO,CAACC,OAAO,CAACC,UAAU,CAACC,SAAS,EAAE,CAACb,KAAK,EAAE;MAAEC;IAAQ,CAAC,KAAK;MAC7DD,KAAK,CAACL,OAAO,GAAGM,OAAO,CAACN,OAAO;MAC/BK,KAAK,CAACc,KAAK,GAAGb,OAAO,CAACa,KAAK;IAC5B,CAAC,CAAC;EACH;AACD,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEf,UAAU;EAAEI,eAAe;EAAEE;AAAc,CAAC,GAAGT,SAAS,CAACmB,OAAO;AAC/E,eAAenB,SAAS,CAACoB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}